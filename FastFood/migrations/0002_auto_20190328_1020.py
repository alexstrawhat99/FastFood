# Generated by Django 2.1.7 on 2019-03-28 10:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('FastFood', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('iban', models.IntegerField()),
                ('bank', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='CommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=200, verbose_name='city')),
                ('street', models.CharField(max_length=200, verbose_name='street')),
                ('number', models.IntegerField(verbose_name='number')),
                ('lat', models.FloatField()),
                ('long', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField(verbose_name='phone')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='DailyMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date')),
            ],
            options={
                'verbose_name': 'DailyMenu',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='price')),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='total_price')),
                ('paid', models.BooleanField(verbose_name='paid')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='FastFood.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBillingDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.CharField(max_length=200, verbose_name='article')),
                ('number_of_items', models.IntegerField(verbose_name='number_of_items')),
                ('price_per_item', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='price_per_piece')),
            ],
            options={
                'verbose_name': 'OrderBillingDetails',
            },
        ),
        migrations.CreateModel(
            name='OrderProductDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_items', models.IntegerField(verbose_name='number_of_items')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='price_per_piece')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_details', to='FastFood.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='price')),
                ('content', models.CharField(max_length=200, verbose_name='content')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'verbose_name': 'Category', 'verbose_name_plural': 'Categories'},
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('commoninfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FastFood.CommonInfo')),
                ('block', models.CharField(blank=True, max_length=200, verbose_name='block')),
                ('stair', models.IntegerField(blank=True, verbose_name='stair')),
                ('room', models.IntegerField(blank=True, verbose_name='room')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='FastFood.Customer')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
            bases=('FastFood.commoninfo',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('commoninfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FastFood.CommonInfo')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='FastFood.Client')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
            bases=('FastFood.commoninfo',),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='FastFood.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='FastFood.Client'),
        ),
        migrations.AddField(
            model_name='orderproductdetails',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='FastFood.Product'),
        ),
        migrations.AddField(
            model_name='menu',
            name='category',
            field=models.ManyToManyField(related_name='categories_list', to='FastFood.Category'),
        ),
        migrations.AddField(
            model_name='menu',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='FastFood.Client'),
        ),
        migrations.AddField(
            model_name='menu',
            name='product',
            field=models.ManyToManyField(related_name='products_list', to='FastFood.Product'),
        ),
        migrations.AddField(
            model_name='dailymenu',
            name='product',
            field=models.ManyToManyField(related_name='daily_menus', to='FastFood.Product'),
        ),
    ]
